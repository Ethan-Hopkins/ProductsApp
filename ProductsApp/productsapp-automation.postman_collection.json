{
	"info": {
		"_postman_id": "16e135c7-7361-480d-b6a5-98230160008f",
		"name": "productsapp-automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26612179"
	},
	"item": [
		{
			"name": "GetAllProducts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							"pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"response to have an Id\", function(){\r",
							"    pm.response.to.have.jsonBody(\"[0].Id\")\r",
							"})  \r",
							"\r",
							"pm.test(\"response to have an Name\", function(){\r",
							"pm.response.to.have.jsonBody(\"[0].Name\")\r",
							"})\r",
							"\r",
							"pm.test(\"response to have an Category\", function(){\r",
							"pm.response.to.have.jsonBody(\"[0].Category\")\r",
							"})\r",
							"\r",
							"pm.test(\"response to have an Price\", function(){\r",
							"pm.response.to.have.jsonBody(\"[0].Price\")\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"value of [0].Id to be 1\", function(){\r",
							"pm.expect(1).to.equal(jsonData[0].Id)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [0].Name to be Eggs\", function(){\r",
							"pm.expect(\"Eggs\").to.equal(jsonData[0].Name)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [0].Category to be What you get from the Egg store\", function(){\r",
							"pm.expect(\"What you get from the Egg store\").to.equal(jsonData[0].Category)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [0].Price to be 100000\", function(){\r",
							"pm.expect(100000).to.equal(jsonData[0].Price)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"value of [1].Id to be 2\", function(){\r",
							"pm.expect(2).to.equal(jsonData[1].Id)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [1].Name to be Bike pedals\", function(){\r",
							"pm.expect(\"Bike pedals\").to.equal(jsonData[1].Name)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [1].Category to be Transportation\", function(){\r",
							"pm.expect(\"Transportation\").to.equal(jsonData[1].Category)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [1].Price to be 300\", function(){\r",
							"pm.expect(300).to.equal(jsonData[1].Price)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"value of [2].Id to be 3\", function(){\r",
							"pm.expect(3).to.equal(jsonData[2].Id)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [2].Name to be Dog\", function(){\r",
							"pm.expect(\"Dog\").to.equal(jsonData[2].Name)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [2].Category to be Pets\", function(){\r",
							"pm.expect(\"Pets\").to.equal(jsonData[2].Category)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [2].Price to be 11.11\", function(){\r",
							"pm.expect(11.11).to.equal(jsonData[2].Price)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44389/api/products",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44389",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"value of Id to be 2\", function(){\r",
							"pm.expect(2).to.equal(jsonData.Id)\r",
							"});\r",
							"\r",
							"pm.test(\"value of Name to be Bike pedals\", function(){\r",
							"pm.expect(\"Bike pedals\").to.equal(jsonData.Name)\r",
							"});\r",
							"\r",
							"pm.test(\"value of Category to be Transportation\", function(){\r",
							"pm.expect(\"Transportation\").to.equal(jsonData.Category)\r",
							"});\r",
							"\r",
							"pm.test(\"value of Price to be 300\", function(){\r",
							"pm.expect(300).to.equal(jsonData.Price)\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"response to have an Id\", function(){\r",
							"    pm.response.to.have.jsonBody(\"Id\")\r",
							"})  \r",
							"\r",
							"pm.test(\"response to have an Name\", function(){\r",
							"pm.response.to.have.jsonBody(\"Name\")\r",
							"})\r",
							"\r",
							"pm.test(\"response to have an Category\", function(){\r",
							"pm.response.to.have.jsonBody(\"Category\")\r",
							"})\r",
							"\r",
							"pm.test(\"response to have an Price\", function(){\r",
							"pm.response.to.have.jsonBody(\"Price\")\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							"pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44389/api/products/2",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44389",
					"path": [
						"api",
						"products",
						"2"
					]
				}
			},
			"response": []
		}
	]
}